// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event.proto

#ifndef PROTOBUF_event_2eproto__INCLUDED
#define PROTOBUF_event_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_event_2eproto();
void protobuf_AssignDesc_event_2eproto();
void protobuf_ShutdownFile_event_2eproto();

class ProtoEvent;

// ===================================================================

class ProtoEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoEvent) */ {
 public:
  ProtoEvent();
  virtual ~ProtoEvent();

  ProtoEvent(const ProtoEvent& from);

  inline ProtoEvent& operator=(const ProtoEvent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoEvent& default_instance();

  void Swap(ProtoEvent* other);

  // implements Message ----------------------------------------------

  inline ProtoEvent* New() const { return New(NULL); }

  ProtoEvent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoEvent& from);
  void MergeFrom(const ProtoEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProtoEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // repeated int32 int_field = 2;
  int int_field_size() const;
  void clear_int_field();
  static const int kIntFieldFieldNumber = 2;
  ::google::protobuf::int32 int_field(int index) const;
  void set_int_field(int index, ::google::protobuf::int32 value);
  void add_int_field(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      int_field() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_int_field();

  // repeated uint32 uint_field = 3;
  int uint_field_size() const;
  void clear_uint_field();
  static const int kUintFieldFieldNumber = 3;
  ::google::protobuf::uint32 uint_field(int index) const;
  void set_uint_field(int index, ::google::protobuf::uint32 value);
  void add_uint_field(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uint_field() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uint_field();

  // repeated string string_field = 4;
  int string_field_size() const;
  void clear_string_field();
  static const int kStringFieldFieldNumber = 4;
  const ::std::string& string_field(int index) const;
  ::std::string* mutable_string_field(int index);
  void set_string_field(int index, const ::std::string& value);
  void set_string_field(int index, const char* value);
  void set_string_field(int index, const char* value, size_t size);
  ::std::string* add_string_field();
  void add_string_field(const ::std::string& value);
  void add_string_field(const char* value);
  void add_string_field(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& string_field() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_string_field();

  // @@protoc_insertion_point(class_scope:ProtoEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > int_field_;
  mutable int _int_field_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uint_field_;
  mutable int _uint_field_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> string_field_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static ProtoEvent* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoEvent

// optional int32 type = 1;
inline void ProtoEvent::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 ProtoEvent::type() const {
  // @@protoc_insertion_point(field_get:ProtoEvent.type)
  return type_;
}
inline void ProtoEvent::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoEvent.type)
}

// repeated int32 int_field = 2;
inline int ProtoEvent::int_field_size() const {
  return int_field_.size();
}
inline void ProtoEvent::clear_int_field() {
  int_field_.Clear();
}
inline ::google::protobuf::int32 ProtoEvent::int_field(int index) const {
  // @@protoc_insertion_point(field_get:ProtoEvent.int_field)
  return int_field_.Get(index);
}
inline void ProtoEvent::set_int_field(int index, ::google::protobuf::int32 value) {
  int_field_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoEvent.int_field)
}
inline void ProtoEvent::add_int_field(::google::protobuf::int32 value) {
  int_field_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoEvent.int_field)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProtoEvent::int_field() const {
  // @@protoc_insertion_point(field_list:ProtoEvent.int_field)
  return int_field_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProtoEvent::mutable_int_field() {
  // @@protoc_insertion_point(field_mutable_list:ProtoEvent.int_field)
  return &int_field_;
}

// repeated uint32 uint_field = 3;
inline int ProtoEvent::uint_field_size() const {
  return uint_field_.size();
}
inline void ProtoEvent::clear_uint_field() {
  uint_field_.Clear();
}
inline ::google::protobuf::uint32 ProtoEvent::uint_field(int index) const {
  // @@protoc_insertion_point(field_get:ProtoEvent.uint_field)
  return uint_field_.Get(index);
}
inline void ProtoEvent::set_uint_field(int index, ::google::protobuf::uint32 value) {
  uint_field_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoEvent.uint_field)
}
inline void ProtoEvent::add_uint_field(::google::protobuf::uint32 value) {
  uint_field_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoEvent.uint_field)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProtoEvent::uint_field() const {
  // @@protoc_insertion_point(field_list:ProtoEvent.uint_field)
  return uint_field_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProtoEvent::mutable_uint_field() {
  // @@protoc_insertion_point(field_mutable_list:ProtoEvent.uint_field)
  return &uint_field_;
}

// repeated string string_field = 4;
inline int ProtoEvent::string_field_size() const {
  return string_field_.size();
}
inline void ProtoEvent::clear_string_field() {
  string_field_.Clear();
}
inline const ::std::string& ProtoEvent::string_field(int index) const {
  // @@protoc_insertion_point(field_get:ProtoEvent.string_field)
  return string_field_.Get(index);
}
inline ::std::string* ProtoEvent::mutable_string_field(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoEvent.string_field)
  return string_field_.Mutable(index);
}
inline void ProtoEvent::set_string_field(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ProtoEvent.string_field)
  string_field_.Mutable(index)->assign(value);
}
inline void ProtoEvent::set_string_field(int index, const char* value) {
  string_field_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtoEvent.string_field)
}
inline void ProtoEvent::set_string_field(int index, const char* value, size_t size) {
  string_field_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtoEvent.string_field)
}
inline ::std::string* ProtoEvent::add_string_field() {
  // @@protoc_insertion_point(field_add_mutable:ProtoEvent.string_field)
  return string_field_.Add();
}
inline void ProtoEvent::add_string_field(const ::std::string& value) {
  string_field_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ProtoEvent.string_field)
}
inline void ProtoEvent::add_string_field(const char* value) {
  string_field_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ProtoEvent.string_field)
}
inline void ProtoEvent::add_string_field(const char* value, size_t size) {
  string_field_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ProtoEvent.string_field)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProtoEvent::string_field() const {
  // @@protoc_insertion_point(field_list:ProtoEvent.string_field)
  return string_field_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProtoEvent::mutable_string_field() {
  // @@protoc_insertion_point(field_mutable_list:ProtoEvent.string_field)
  return &string_field_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_event_2eproto__INCLUDED
